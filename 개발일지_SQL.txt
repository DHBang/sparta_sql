** 1주차 **

■ 데이터베이스
데이터를 저장하고 사용하기 위한 목적
CRUD

■ Select
Select * from table
Select 필드 from table


■ Where
가져올 데이터에 조건을 걸어줌
Select * from table Where 5000 > score

자주 쓰는 문법
같지않음 - !=
범위 - where created_at between "2020-07-13" and "2020-07-15";
포함 - where week in (1, 3);
패턴 - where email like '%daum.net';
일부데이터 - where payment_method = "kakaopay" limit 5;
중복제외 - ```sql
select distinct(payment_method) from orders;


** 2주차 **

■ Group by 
동일한 범주를 갖는 데이터를 하나로 묶어서, 범주별 통계를 내주는 것을 의미

■ Order by 
데이터 정렬 가능

쿼리가 실행되는 순서 : from → group by → select

■ Group by 활용
select 범주별로 세어주고 싶은 필드명, count(*) from 테이블명
- count(*)는 동일한 범주의 개수를 추출함

최솟값
select 범주가 담긴 필드명, min(최솟값을 알고 싶은 필드명) from 테이블명
group by 범주가 담긴 필드명;

최대값
select 범주가 담긴 필드명, max(최댓값을 알고 싶은 필드명) from 테이블명
group by 범주가 담긴 필드명;

평균값
select 범주가 담긴 필드명, avg(평균값을 알고 싶은 필드명) from 테이블명
group by 범주가 담긴 필드명;

■ Order by 활용

결과를 오름차순
select name, count(*) from users
group by name
order by count(*);

내림차순
select name, count(*) from users
group by name
order by count(*) desc;

쿼리가 실행되는 순서: from → group by → select → order by

where까지 포함된 쿼리가 실행되는 순서 : from → where → group by → select → order by

 